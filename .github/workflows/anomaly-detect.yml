name: üîç Anomaly Detection

on:
  push:
    paths:
      - '**.csv'
      - 'detect.py'
  workflow_dispatch:

jobs:
  anomaly-scan:
    runs-on: ubuntu-latest

    steps:
    - name: ‚¨áÔ∏è Checkout code
      uses: actions/checkout@v3

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --no-cache-dir --no-user pandas scikit-learn tabulate
        python -c "import tabulate; print('‚úÖ tabulate installed:', tabulate.__version__)"

    - name: üöÄ Run Anomaly Detection
      run: |
        python detect.py
        echo "üìÇ Current files:"
        ls -la
        echo "üîé Anomaly detection complete."

    - name: üïí Get last modified time of anomaly_report.md
      id: get_modified_time
      run: |
        if [ -f anomaly_report.md ]; then
          LAST_MODIFIED_TIME=$(stat --format=%Y anomaly_report.md)
          echo "LAST_MODIFIED_TIME=$LAST_MODIFIED_TIME" >> $GITHUB_ENV
        else
          echo "LAST_MODIFIED_TIME=0" >> $GITHUB_ENV
        fi

    - name: üïí Get current time
      id: get_current_time
      run: |
        CURRENT_TIME=$(date +%s)
        echo "CURRENT_TIME=$CURRENT_TIME" >> $GITHUB_ENV

    - name: üìù Append to anomaly_report.md and check for anomalies
      run: |
        # Append new anomalies to the report
        echo "Anomalies detected at $(date)" >> anomaly_report.md
        echo "Details: $(python detect.py)" >> anomaly_report.md
        
        # Check if anomaly_report.md has been modified during this run
        if [ "$LAST_MODIFIED_TIME" -lt "$CURRENT_TIME" ]; then
          echo "‚ùó Anomalies detected ‚Äî Failing build"
          cat anomaly_report.md
          exit 1
        else
          echo "‚úÖ No new anomalies detected."
        fi
